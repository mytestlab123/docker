name: Multi-Folder Docker Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      folders: ${{ steps.changes.outputs.folders }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Detect changed folders
      id: changes
      run: |
        # Get all folders that contain Dockerfiles (excluding root)
        echo "=== Debugging folder detection ==="
        find . -name "Dockerfile" -not -path "./.git/*"
        echo "=== Processing folders ==="
        FOLDERS=$(find . -mindepth 2 -name "Dockerfile" -not -path "./.git/*" | xargs dirname | cut -c3- | sort -u | jq -R -s -c 'split("\n") | map(select(length > 0))')
        echo "folders=$FOLDERS" >> $GITHUB_OUTPUT
        echo "Found folders with Dockerfiles: $FOLDERS"

  build:
    needs: detect-changes
    runs-on: ubuntu-latest
    if: needs.detect-changes.outputs.folders != '[]'
    strategy:
      matrix:
        folder: ${{ fromJson(needs.detect-changes.outputs.folders) }}
      fail-fast: false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        registry: docker.io
        
    - name: Login to GitHub Container Registry
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Login to Quay.io
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      continue-on-error: true
      uses: docker/login-action@v3
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}
        
    - name: Generate image name
      id: image
      run: |
        FOLDER_NAME="${{ matrix.folder }}"
        # Validate folder name is not empty
        if [ -z "$FOLDER_NAME" ]; then
          echo "Error: Empty folder name detected"
          exit 1
        fi
        IMAGE_NAME="amitkarpe/${FOLDER_NAME}-demo"
        echo "name=$IMAGE_NAME" >> $GITHUB_OUTPUT
        echo "Building image: $IMAGE_NAME from folder: $FOLDER_NAME"
        
    - name: Build and push to multiple registries
      uses: docker/build-push-action@v5
      with:
        context: ./${{ matrix.folder }}
        push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        tags: |
          ${{ steps.image.outputs.name }}:latest
          ghcr.io/${{ github.repository_owner }}/${{ matrix.folder }}-demo:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Push to Quay.io (optional)
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      continue-on-error: true
      run: |
        if [ -n "${{ secrets.QUAY_USERNAME }}" ] && [ -n "${{ secrets.QUAY_PASSWORD }}" ]; then
          echo "Pushing to Quay.io..."
          echo "Checking, need to delete/ cleanup this part"
          # Use the actual username from secrets, not the repository username
          #QUAY_IMAGE="quay.io/${{ secrets.QUAY_USERNAME }}/${{ matrix.folder }}-demo:latest"          
          #echo "QUAY_IMAGE 1: ${QUAY_IMAGE}"
          #docker tag ${{ steps.image.outputs.name }}:latest "$QUAY_IMAGE"          
          #echo -e "push: ${QUAY_IMAGE}"
          #docker push "$QUAY_IMAGE"

          
          set -x
          set +e
          echo "TAG: ${{ steps.image.outputs.name }}:latest "

          echo "docker tag ${{ steps.image.outputs.name }}:latest "$QUAY_IMAGE""
          QUAY_IMAGE="quay.io/amitkarpe/${{ matrix.folder }}-demo:latest"
          echo "QUAY_IMAGE 2: ${QUAY_IMAGE}"
          docker tag ${{ steps.image.outputs.name }}:latest "$QUAY_IMAGE"
          docker tag ${{ matrix.folder }}-demo:latest "quay.io/amitkarpe/${{ matrix.folder }}-demo:latest"
          echo -e "push: ${QUAY_IMAGE}"
          echo "=========================="
          docker images
          echo "=========================="
          echo "=========================="
          docker images | grep "demo:latest"
          echo "=========================="
          
          docker push "$QUAY_IMAGE"
          echo "‚úÖ Successfully pushed to Quay.io: $QUAY_IMAGE"
        else
          echo "‚è≠Ô∏è Skipping Quay.io (credentials not configured)"
          echo "QUAY_USERNAME available: ${{ secrets.QUAY_USERNAME != '' }}"
          echo "QUAY_PASSWORD available: ${{ secrets.QUAY_PASSWORD != '' }}"
        fi
        
    - name: Test built image
      run: |
        echo "Testing image: ${{ steps.image.outputs.name }}"
        docker run --rm ${{ steps.image.outputs.name }}:latest echo "Image test successful" || echo "Image test completed"
        
    - name: Verify multi-registry deployment
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        echo "üéâ Multi-registry deployment completed!"
        echo "üì¶ Images available at:"
        echo "  - Docker Hub: ${{ steps.image.outputs.name }}:latest"
        echo "  - GHCR: ghcr.io/${{ github.repository_owner }}/${{ matrix.folder }}-demo:latest"
        if [ -n "${{ secrets.QUAY_USERNAME }}" ] && [ -n "${{ secrets.QUAY_PASSWORD }}" ]; then
          echo "  - Quay.io: quay.io/${{ secrets.QUAY_USERNAME }}/${{ matrix.folder }}-demo:latest"
        fi
        echo ""
        echo "üöÄ Rate limit mitigation: Use GHCR for unlimited pulls!"
